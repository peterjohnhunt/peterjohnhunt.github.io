/*************************

 STYLE DIRECTORY

	=DeclareFonts
	=FontSizeFunction
	=FontMaster
	=ButtonStyle
	=FormatSection
	=HighlightSelection
	=Placeholder
	=ToggleContent
	=ColumnLayout
	=Ease
	=GridMe
	=CoverImg
	=ColorGradient
	=AbsolutePositioning
	=MultiplyOverlay
	=GravityForms

*************************/

// test addition
//=====================================================//
// =DeclareFonts
//=====================================================//

@mixin declare-fonts($font-face:null, $font-list: $main-font-list, $font-declaration: $main-font){

	@if $font-face == null{
		@each $font-name, $font-weight in $font-list{
			%#{$font-name}{
				font-family: $font-declaration;
				font-weight: $font-weight;

				&it{
					@extend %#{$font-name};
					font-style: italic;
				}
			}
		}
	}
	@else{
		@each $font-name, $font-family in $font-list{
			%#{$font-name}{
				font-family: $font-family
			}
		}
	}
}

//=====================================================//
// =FontSizeFunction
//=====================================================//

@function em($px, $base: 16) {
	@return ($px / $base) * 1em;
}


//=====================================================//
// =FontMaster
//=====================================================//


@mixin font($font-family:null, $font-size:16, $color:null, $line-height:null, $margin-bottom:null, $text-transform:null){
	@if $font-family != null{
		@extend %#{$font-family};
	}

	color:$color;
	text-transform: $text-transform;
	font-size:em($font-size);

	@if $line-height != null{
		line-height:em($line-height, $font-size);
	}

	@if $margin-bottom != null{
		$margin-holder: $margin-bottom*1px;

		@if $line-height != null{
			margin-bottom: $margin-holder - ($line-height*1px - $font-size*1px);
		} @else{
			margin-bottom: $margin-holder;
		}
	}
}


//=====================================================//
// =ButtonStyle
//=====================================================//


@mixin button($background-color:null, $border:null, $border-radius:null, $padding:null, $min-width:null, $display:inline-block){
	display: $display;
	background-color: $background-color;
	border: $border;
	border-radius: $border-radius;
	padding: $padding;
	min-width: $min-width;
}


//=====================================================//
// =FormatSection
//=====================================================//

@mixin formatSection($primaryW:50%, $containerW:1440px, $primaryPad:0, $contentPad:0, $start:odd, $stacks:(850px hide), $elType:null){
	$secondaryW: 100% - $primaryW;
	$primaryDec: $primaryW / 100%;
	$secondaryDec: $secondaryW / 100%;

	.section-holder{
		.section{
			@extend .clr;

			+ *{
				clear: both;
			}

			.secondary{
				height: 100%;
				width: $secondaryW;
			}

			.primary{
				width: $primaryW;
				padding: $primaryPad;

				.content{
					max-width: ($primaryDec * $containerW) - $contentPad;
				}
			}
		}

		@if $start == odd {
			.section{
				.secondary{
					float: right;
				}

				.primary{
					float: left;

					.content{
						float: right;
						padding-right: $contentPad + px;
					}
				}

				&:nth-child(even){

					.secondary{
						float: left;
					}

					.primary{
						float: right;

						.content{
							float: left;
							padding-left: $contentPad + px;
						}
					}
				}
			}
		}

		@else if $start == even {
			.section{
				.secondary{
					float: right;
				}

				.primary{
					float: left;

					.content{
						float: right;
						padding-right: $contentPad + px;
					}
				}

				&:nth-child(odd){

					.secondary{
						float: left;
					}

					.primary{
						float: right;

						.content{
							float: left;
							padding-left: $contentPad + px;
						}
					}
				}
			}
		}

		@media (max-width: $containerW){
			.section:nth-child(n) .primary .content{
				max-width: 100%;
				width: 90%;
				padding: 0 5%;
			}
		}

		@media (max-width: nth($stacks, 1)){
			.section:nth-child(n){
				height: auto !important;

				.primary{
					width: 100%;
					float: none;

					.content{
						float: none;
					}
				}

				@if nth($stacks, 2) == hide {
					.secondary{
						display: none;
					}
				}
				@else{
					.secondary{
						height: nth($stacks, 2) !important;
						width: 100%;
						float: none;

						@if $elType != null{
							#{$elType}{
								top: 0 !important;
							}
						}
					}
				}
			}
		}
	}
}

//=====================================================//
// =HighlightSelection
//=====================================================//


@mixin selection($background-color, $color){
	::selection {
		background-color: $background-color;
		color: $color;
	}

	::-moz-selection {
		background-color: $background-color;
		color: $color;
	}
}


//=====================================================//
// =Placeholder
//=====================================================//


@mixin placeholder($color, $font){
	::-webkit-input-placeholder { /* WebKit browsers */
	    color: $color;
	    @extend %#{$font};
	}

	:-moz-placeholder { /* Mozilla Firefox 4 to 18 */
	    color: $color;
	    opacity:  1;
	    @extend %#{$font};
	}

	::-moz-placeholder { /* Mozilla Firefox 19+ */
	    color: $color;
	    opacity:  1;
	    @extend %#{$font};
	}

	:-ms-input-placeholder { /* Internet Explorer 10+ */
	    color: $color;
	    @extend %#{$font};
	}
}


//=====================================================//
// =ToggleContent
//=====================================================//


// .toggle-content-item{
// 	display: none;

// 	&.active{
// 		display: block;
// 	}
// }


//=====================================================//
// =ColumnLayout
//=====================================================//


@mixin column-layout($column-count:2, $column-gap:4){
	column-count: $column-count;
	-moz-column-count: $column-count;
	-webkit-column-count: $column-count;
	column-gap: ($column-gap)em;
	-moz-column-gap: ($column-gap)em;
	-webkit-column-gap: ($column-gap)em;
}


//=====================================================//
// =Ease
//=====================================================//


@mixin ease($property: all, $duration: 0.35s){
	-webkit-transition: $property $duration ease-in-out;
	-moz-transition: $property $duration ease-in-out;
	-o-transition: $property $duration ease-in-out;
	transition: $property $duration ease-in-out;
}

//=====================================================//
// =GridMe
//=====================================================//

@mixin GridMe($columns, $margin-right:0, $margin-top:0, $breakpoints:undefined){
	width: ((100% - (($columns - 1) * $margin-right)) / $columns);
	margin-right: $margin-right;
	margin-top: $margin-top;
	float:left;
	-webkit-transition: width 0.35s ease-in-out;
	-moz-transition: width 0.35s ease-in-out;
	-o-transition: width 0.35s ease-in-out;
	transition: width 0.35s ease-in-out;

	&:nth-child(#{$columns}n){
		margin-right:0;
	}

	&:nth-child(-n+#{$columns}){
		margin-top:0;
	}


	@if( $breakpoints != undefined ){
		$breaks: $breakpoints;

		@each $breakpoint, $column in $breaks{
			@media (max-width:#{$breakpoint}px){
				width: ((100% - (($column - 1) * $margin-right)) / $column);

				&:nth-child(n){
					margin-right:$margin-right;
					margin-top:$margin-top;
				}

				&:nth-child(#{$column}n){
					margin-right:0;
				}

				&:nth-child(-n+#{$column}){
					margin-top:0;
				}
			}
		}
	}
}


//=====================================================//
// =CoverImg
//=====================================================//


@mixin coverimg($xPo: 50%, $yPo: 50%){
	-webkit-background-size: cover !important;
	-moz-background-size: cover !important;
	background-size: cover !important;
	background-position: $xPo $yPo !important;
	background-repeat: no-repeat !important;
}


//=====================================================//
// =ColorGradient
//=====================================================//


@mixin colorGrad($startColor, $endColor, $startPercent:0%, $endPercent:100%, $orientation:horizontal){
	@if $orientation == vertical{
		background: $startColor; /* Old browsers */
		background: -moz-linear-gradient(top,  $startColor $startPercent, $endColor $endPercent); /* FF3.6+ */
		background: -webkit-gradient(linear, left top, left bottom, color-stop($startPercent,$startColor), color-stop($endPercent,$endColor)); /* Chrome,Safari4+ */
		background: -webkit-linear-gradient(top,  $startColor $startPercent,$endColor $endPercent); /* Chrome10+,Safari5.1+ */
		background: -o-linear-gradient(top,  $startColor $startPercent,$endColor $endPercent); /* Opera 11.10+ */
		background: -ms-linear-gradient(top,  $startColor $startPercent,$endColor $endPercent); /* IE10+ */
		background: linear-gradient(to bottom,  $startColor $startPercent,$endColor $endPercent); /* W3C */
	}
	@else if $orientation == horizontal{
		background: $startColor; /* Old browsers */
		background: -moz-linear-gradient(left,  $startColor $startPercent, $endColor $endPercent); /* FF3.6+ */
		background: -webkit-gradient(linear, left top, right top, color-stop($startPercent,$startColor), color-stop($endPercent,$endColor)); /* Chrome,Safari4+ */
		background: -webkit-linear-gradient(left,  $startColor $startPercent,$endColor $endPercent); /* Chrome10+,Safari5.1+ */
		background: -o-linear-gradient(left,  $startColor $startPercent,$endColor $endPercent); /* Opera 11.10+ */
		background: -ms-linear-gradient(left,  $startColor $startPercent,$endColor $endPercent); /* IE10+ */
		background: linear-gradient(to right,  $startColor $startPercent,$endColor $endPercent); /* W3C */
	}
}

//=====================================================//
// =AbsolutePositioning
//=====================================================//

%abscover{
	position: absolute;
	left: 0;
	top: 0;
	height: 100%;
	width: 100%;
}

@mixin centerH($height){
	position: absolute;
	height: $height * 1px;
	top: 50%;
	margin-top: -1px * ($height/2);
}

@mixin centerW($width){
	position: absolute;
	width: $width * 1px;
	left: 50%;
	margin-left: -1px * ($width/2);
}

@mixin centerFull($height, $width){
	position: absolute;
	height: $height * 1px;
	top: 50%;
	margin-top: -1px * ($height/2);
	width: $width * 1px;
	left: 50%;
	margin-left: -1px * ($width/2);
}

//=====================================================//
// =MultiplyOverlay
//=====================================================//

@mixin multiply($color, $opacity, $itemPos: relative, $childrenPos: relative){
	$filter: 100 * $opacity;

	position: $itemPos;
	background-blend-mode: multiply;
	background-color: rgba($color, $opacity);

	.overlayFix{
		z-index: 0;
		background-color: $color;
		@extend %abscover;
		opacity: $opacity;
		filter: alpha(opacity=$filter);

		+ *{
			position: $childrenPos;
			z-index: 5;
		}
	}
}


//=====================================================//
// =GravityForms
//=====================================================//

@mixin formCol($smallestCol:3, $marginR:3%, $marginB:20px, $paddingY:10, $paddingX:10){

	//========================================= FORM CLEAR

	.gform_body{
		overflow:hidden;

		input[type="text"], input[type="password"], input[type="tel"], input[type="email"], textarea{
			border:none;
		}

		ul{
			list-style:none;
			padding:0;
			margin:0;
		}
	}

	.gfield_description{
		display:none;
	}

	.gform_validation_container{
		display:none;
	}

	.gform_body{
		ul:before,
		ul:after {
		  content:"";
		  display:table;
		}
		ul:after {
		  clear:both;
		}
		ul {
		  zoom:1;
		}
		ul.gform_fields + *{
			clear:both;
		}
		
		li{
			float:left;
		}
	}

	.gform_button{
		border:none;
		background:none;
	}

	//========================================= INPUT WIDTH
	
	$i:$smallestCol;

	@while $i > 0{

		.gform_body{
			li.col#{$i}{
				// width: ((100% - (($i - 1) * $marginR)) / $i);
				width:(100% / $i) - $marginR;
				margin-right:$marginR;
				margin-bottom:$marginB;

				// &:nth-of-type(#{$i}n){
				// 	margin-right:0;
				// }
			}

			.col#{$i} input{
				width:calc(100% - #{10 + $paddingX}px);
				padding:#{$paddingY}px #{$paddingX}px;
			}
		}

		$i:$i - 1;
	}

	.gform_body{
		ul{
			width:100% + $marginR;
		}
	}
}

@mixin formStyle($borderSize:1px, $borderColor:lightgray, $borderRadius:0, $bgColor:null){
	.gform_body{
		input[type="text"], input[type="password"], input[type="tel"], input[type="email"], textarea{
			box-shadow:0 0 0 $borderSize $borderColor inset;
			border-radius:$borderRadius;
			background-color:$bgColor;
		}
	}
}

@mixin formText($font:reg, $size:16, $placeColor:lightgray, $inputColor:black, $labelFont:$font, $labelSize:$size, $labelColor:black, $labelMargin:10px){

	//========================================= PLACEHOLDER TEXT

	::-webkit-input-placeholder {
		color: $placeColor;
		opacity:1;
	}

	:-moz-placeholder { /* Firefox 18- */
		color: $placeColor;
		opacity:1;
	}

	::-moz-placeholder { /* Firefox 19+ */
		color: $placeColor;
		opacity:1;
	}

	:-ms-input-placeholder {
		color: $placeColor;
		opacity:1;
	}


	//========================================= INPUT TEXT

	.gform_body{
		input{
			color:$inputColor;
			@extend %#{$font};
			font-size:($size/16) * 1em;
		}

		label{
			display:block;
			@extend %#{$labelFont};
			font-size:($labelSize/16) * 1em;
			color:$labelColor;
			margin-bottom:$labelMargin;
		}
	}
}

@mixin formSubmit($family:reg, $size:16, $color:white, $padding:15px 18px, $bg:blue, $radius:null, $border:null){
	.gform_footer{
		.gform_button{
			cursor:pointer;
			@extend %#{$family};
			font-size:($size/16) * 1em;
			color:$color;
			padding:$padding;
			background-color:$bg;
			border:$border;
			border-radius:$radius;
		}
	}
}

@mixin formFocus($borderWidth:1px, $borderColor:red, $text:gray, $bg:null){
	.gform_body{
		input[type="text"], input[type="password"], input[type="tel"], input[type="email"], textarea{
			-webkit-transition: all 0.35s ease-in-out;
			-moz-transition: all 0.35s ease-in-out;
			-o-transition: all 0.35s ease-in-out;
			transition: all 0.35s ease-in-out;

			&:focus{
				box-shadow:0 0 0 $borderWidth $borderColor inset;
				background-color:$bg;
				color:$text;
			}
		}
	}
}